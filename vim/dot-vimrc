" not compatible with vi
set nocompatible
" set utf-8 encoding
set encoding=utf-8

" search down into subfolders
set path+=**
" show options menu
set wildmenu

" file browser
let g:netrw_banner=0
let g:netrw_browse_split=4
let g:netrw_altv=1
let g:netrw_liststyle=3
"let g:netrw_list_hide=netrw_gitignore#Hide()
"let g:netrw_list_hide=.

" Automatic reload of ~/vimrc
autocmd! bufwritepost .vimrc source %

" Redifine the leader key to be ,
let mapleader = ','

" Show line numbers
set nu
" relative line numbers
" set rnu
" augroup numbertoggle
"  autocmd!
"  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
"  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
" augroup END

" Ignore cases when searching characters
set ignorecase " same as set ic
set hlsearch   " same as hls
set incsearch
set smartcase
" Update opened files when changed externally
set autoread

" Removes highlight shortcut
"noremap <C-n> :nohl<CR>
"vnoremap <C-n> :nohl<CR>
"inoremap <C-n> :nohl<CR>

" Quicksave
noremap <C-X> :update<CR>
vnoremap <C-X> <C-C>:update<CR>
inoremap <C-X> <C-O>:update<CR>

" Probably Better copy and paste
"set pastetoggle=<F2>
"set clipboard=unnamed

" C-C to copy mouse contents
vmap <C-C> "+y

" Mouse and backspace
"set mouse=a " ALT and click for OSX
set bs=2    " make backspace - backspace

" Easier move between tabs
"map <Leader>n <esc>:tabnew<CR>
"map <seader>< <esc>:tabprevious<CR>
"map <Leader>>  <esc>:tabnext<CR>

map <C-I> <esc>:tabnew<CR>
nnoremap <C-\> <esc>:tabprevious<CR>
nnoremap <C-]>  <esc>:tabnext<CR>

"map <C-m> <c-w><c-v>
""map <C-> <c-w><c-s>

" Easier move between windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
nnoremap <c-h> <c-w>h

" Sort lines
vnoremap <Leader>s :sort<CR>

" easier moving code blocks
vnoremap < <gv
vnoremap > >gv

" Show whitespaces
"autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
"au InsertLeave * match ExtraWhitespace /\s\+$/

" Soft color scheme
"set t_Co=80
set t_Co=256

" Syntax highlight
filetype off
filetype plugin indent on
syntax on

let s:extfname = expand("%:e")
if s:extfname ==? 'f90'
    let fortran_free_source=1
    unlet! fortran_fixed_source
else
    let fortran_fixed_source=1
    unlet! fortran_free_source
endif

" Easier formatting of paragraphs
vmap Q gq
nmap Q gqap
"
" " Undo and history
set history=700
set undolevels=700
"

" Position of new tab opening
set splitbelow
set splitright

" Python specific features
set foldmethod=indent
set foldlevel=99

au BufNewFile, BufRead *.py
  \ set tabstop=4
  \ set softtabsstiop=4
  \ set tabstop=4
  \ set softtabstop=4
  \ set shiftwidth=4
  \ set textwidth=79
  \ set shiftround
  \ set expandtab
  \ set autoindent

" " Trading TABS for spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab
set autoindent


" Quit windows
noremap <Leader>e :quit<CR> " Quit current windows
noremap <Leader>E :qa<CR> " Quit all windows
noremap <Leader>q :q!<CR> " Quit all windows
noremap <Leader>Q :qa!<CR> " Quit all windows
"
" " No backup or swap files
set nobackup
set nowritebackup
set noswapfile

"
" " Highlight co lor 80
if exists('+colorcolumn')
	set colorcolumn=80
	else
		au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+',-1)
endif




set rtp+=~/.vim/bundle/Vundle.vim
if isdirectory(expand('~/.vim/bundle/Vundle.vim'))

    call vundle#begin()

    Plugin 'gmarik/Vundle.vim'
    if !isdirectory(expand('~/.vim/bundle/Vundle.vim'))
        PluginInstall
        quit
    endif

    Plugin 'tpope/vim-fugitive'
    if !isdirectory(expand('~/.vim/bundle/vim-fugitive'))
        PluginInstall
        quit
    endif
    Plugin 'tpope/vim-commentary'
    if !isdirectory(expand('~/.vim/bundle/vim-commentary'))
        PluginInstall
        quit
    endif
    Plugin 'tpope/vim-surround'
    if !isdirectory(expand('~/.vim/bundle/vim-surround'))
        PluginInstall
        quit
    endif
    Plugin 'L9'
    if !isdirectory(expand('~/.vim/bundle/L9'))
        PluginInstall
        quit
    endif

    " Track the engine.
    Plugin 'SirVer/ultisnips'
    if !isdirectory(expand('~/.vim/bundle/ultisnips'))
        PluginInstall
        quit
    endif
    " Snippets
    Plugin 'honza/vim-snippets'
    if !isdirectory(expand('~/.vim/bundle/vim-snippets'))
        PluginInstall
        quit
    endif

    "Latex
    Plugin 'vimlatex'
    if !isdirectory(expand('~/.vim/bundle/vimlatex'))
        PluginInstall
        quit
    endif

    "Power Line
    Plugin 'Lokaltog/Powerline'
    if !isdirectory(expand('~/.vim/bundle/Powerline'))
        PluginInstall
        quit
    endif

    " Valloric/YouCompleteMe
    " Plugin 'Valloric/YouCompleteMe'
    " if !isdirectory(expand('~/.vim/bundle/YouCompleteMe'))
    "     PluginInstall
    "     quit
    " endif

    " Vim-airline
    Plugin 'bling/vim-airline'
    if !isdirectory(expand('~/.vim/bundle/vim-airline'))
        PluginInstall
        quit
    endif
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#left_sep = '▶'
    let g:airline#extensions#tabline#right_sep = '◀'
    let g:airline#extensions#tabline#left_alt_sep = '|'
    let g:airline#extensions#tabline#right_alt_sep = '|'

    "Better WhiteSpaces
    Plugin 'ntpeters/vim-better-whitespace'
    if !isdirectory(expand('~/.vim/bundle/vim-better-whitespace'))
        PluginInstall
        quit
    else
        autocmd bufwritepre <buffer> StripWhitespace
        set laststatus=2
    endif

    " Trigger configuration
    let g:UltiSnipsExpandTrigger="<tab>"
    let g:UltiSnipsJumpForwardTrigger="<c-b>"
    let g:UltiSnipsJumpBackwardTrigger="<c-z>"

    " Split window
    let g:UltiSnipsEditSplit="vertical"

    " Color schemes
    Plugin 'flazz/vim-colorschemes'
    if !isdirectory(expand('~/.vim/bundle/vim-colorschemes'))
        PluginInstall
        quit
    endif
    call vundle#end()


    " L9/                    ultisnips/             vim-better-whitespace/
    " vim-commentary/        vimlatex/              vim-surround/
    " Powerline/             vim-airline/           vim-colorschemes/
    " vim-fugitive/          vim-snippets/          Vundle.vim/
    " if !isdirectory(expand('~/.vim/bundle/Vundle.vim'))
    "     PluginInstall
    " elseif !isdirectory(expand('~/.vim/bundle/vim-fugitive'))
    "     PluginInstall
    " elseif !isdirectory(expand('~/.vim/bundle/vim-commentary'))
    "     PluginInstall
    " endif
    " Plugin 'gmarik/Vundle.vim'
    " Plugin 'tpope/vim-fugitive'
    " Plugin 'tpope/vim-commentary'
    " Plugin 'tpope/vim-surround'
    " Plugin 'L9'
    " Plugin 'SirVer/ultisnips'
    " Plugin 'honza/vim-snippets'
    " Plugin 'vimlatex'
    " Plugin 'Lokaltog/Powerline'
    " Plugin 'bling/vim-airline'

    if isdirectory(expand('~/.vim/bundle/vim-colorschemes'))
        "colorscheme Monokai
        "colorscheme bog
        "colorscheme busierbee
        colorscheme busybee
        "colorscheme colorful
        "colorscheme fine_blue
        "colorscheme fruit
        "colorscheme gentooish
        "colorscheme gobo
        "colorscheme herald
        "colorscheme ingretu
        "colorscheme inkpot
        "colorscheme ir_black
        "colorscheme jellybeans
        "colorscheme jellyx
        "colorscheme kruby
        "colorscheme lettuce
        "colorscheme liquidcarbon
        "colorscheme lucius
        "colorscheme moria
        "colorscheme mustang
        "colorscheme nazca
        "colorscheme nicotine
        "colorscheme obsidian
        "colorscheme oceanlight
        "colorscheme phd
        "colorscheme proton
        "colorscheme pyte
        "colorscheme python
        "colorscheme rainbow_fine_blue
        "colorscheme rainbow_fruit
        "colorscheme shobogenzo
        "colorscheme simpleandfriendly
        "colorscheme softbluev2
        "colorscheme softlight
        "colorscheme southwest-fog
        "colorscheme summerfruit
        "colorscheme symfony
        "colorscheme synic
        "colorscheme taqua
        "colorscheme twilight
        "colorscheme underwater
        "colorscheme vividchalk
        "colorscheme vylight
        "colorscheme wombat
        "colorscheme wombat256
        "colorscheme xoria256
        "colorscheme zenburn
        "colorscheme zenesque
    endif
endif

